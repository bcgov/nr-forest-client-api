name: PR

on:
  pull_request:

env:
  DOMAIN: apps.silver.devops.gov.bc.ca

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  pr-validation:
    name: Pull Request Validation
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      pull-requests: write
    outputs:
      semver: ${{ steps.changelog.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Pull request size and stability labels
        uses: actions/labeler@v5
        continue-on-error: true
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Conventional Label
        uses: bcoe/conventional-release-labels@v1
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ignored_types: '["chore","pr"]'
          type_labels: '{"feat": "feature", "fix": "fix", "bug": "fix", "doc": "documentation", "ci": "ci", "chore": "chore", "breaking": "breaking", "BREAKING CHANGE": "breaking"}'

      - name: Conventional Changelog Update
        continue-on-error: true
        uses: TriPSs/conventional-changelog-action@v6
        id: changelog
        with:
          github-token: ${{ github.token }}
          output-file: "CHANGELOG.md"
          skip-version-file: "true"
          skip-commit: "true"
          git-push: "false"
          git-branch: refs/heads/${{ github.head_ref }}

      - name: Comment PR
        continue-on-error: true
        uses: thollander/actions-comment-pull-request@v3
        if: steps.changelog.outputs.skipped == 'false'
        with:
          message: |
            # Current changelog
            ${{ steps.changelog.outputs.clean_changelog }}
          comment_tag: "# Current changelog"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pr-greeting:
    name: Greeting
    runs-on: ubuntu-24.04
    permissions:
      pull-requests: write
    steps:
      - name: Greeting
        uses: bcgov/action-pr-description-add@v1.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          add_markdown: |
            ---
            Thanks for the PR!

            Any successful deployments (not always required) will be available below.
            [API](https://${{ github.event.repository.name }}-${{ github.event.number }}-api.${{ env.DOMAIN }}/) available

            Once merged, code will be promoted and handed off to following workflow run.
            [Main Merge Workflow](https://github.com/${{ github.repository }}/actions/workflows/merge-main.yml)
            
  build:
    name: Build
    runs-on: ubuntu-24.04
    needs: [pr-validation]
    permissions:
      contents: read
      packages: write
    steps:
      - uses: bcgov/action-builder-ghcr@v2.3.0
        with:
          package: api
          tag: ${{ github.event.number }}
          tag_fallback: test
          build_context: ./
          build_file: Dockerfile
          build_args: |
            APP_VERSION=${{ github.event.number }}

  deploy:
    name: Deploy
    needs: [build]
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    environment: dev
    steps:
      - name: Deploys
        uses: bcgov/action-deployer-openshift@v3.2.0
        with:
          file: openshift.deploy.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          overwrite: true
          oc_version: "4.13"
          verification_path: /health
          parameters:
            -p ORACLEDB_USER=${{ secrets.ORACLEDB_USERNAME }}
            -p ORACLEDB_PASSWORD=${{ secrets.ORACLEDB_PASSWORD }}
            -p ORACLEDB_DATABASE=${{ secrets.ORACLEDB_DATABASE }}
            -p ORACLEDB_HOST=${{ secrets.ORACLEDB_HOST }}
            -p ORACLEDB_SERVICENAME=${{ secrets.ORACLEDB_SERVICENAME }}
            -p ORACLEDB_SECRET=${{ secrets.ORACLEDB_SECRET }}
            -p ZONE=${{ github.event.number }}
            -p TAG=${{ github.event.number }}

      - name: Deploy dev route
        uses: bcgov/action-deployer-openshift@v3.2.0
        with:
          file: .github/openshift.dev.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.OC_SERVER }}
          oc_token: ${{ secrets.OC_TOKEN }}
          oc_version: "4.13"
          overwrite: true
          parameters:
            -p ZONE=${{ github.event.number }}

  postman:
    name: Smoke Test
    needs: [deploy]
    environment: dev
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      checks: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: API Health check
        uses: matt-ball/newman-action@master
        with:
          collection: postman/FCA.postman_collection.json
          envVar: '[{"key":"URL_FCA","value":"https://${{ github.event.repository.name }}-${{ github.event.number }}-api.${{ env.DOMAIN }}"}]'
          reporters: '["cli"]'
          folder: '["general"]'

      - name: Postman Smoke Test
        uses: matt-ball/newman-action@master
        with:
          collection: postman/FCA.postman_collection.json
          envVar: '[{"key":"URL_FCA","value":"https://${{ github.event.repository.name }}-${{ github.event.number }}-api.${{ env.DOMAIN }}"}]'
          iterationData: postman/FCA_postman_tests_dev.json
          reporters: '["cli", "junit"]'
          reporter: '{ "junit" : { "export" : "./postman/report.xml" } }'

      - name: Postman Smoke Test Report
        uses: mikepenz/action-junit-report@v5
        if: always() # always run even if the previous step fails
        with:
          report_paths: "postman/report.xml"
          commit: ${{ github.event.pull_request.head.sha }}
          summary: Postman Tests
          detailed_summary: true
          job_name: Postman Smoke Test Report
